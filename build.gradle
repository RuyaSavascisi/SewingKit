buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

repositories {
    maven {
        url "https://dvs1.progwml6.com/files/maven/"
    }
}

version = '1.3.2.1'
group = 'dev.gigaherz.sewingkit' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'SewingKit-UNKNOWN'

project.afterEvaluate {
    archivesBaseName = "SewingKit-${project.MC_VERSION}"
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

minecraft {
    mappings channel: 'parchment', version: '2021.10.10-1.16.5'

    accessTransformer(file("src/main/resources/META-INF/accesstransformer.cfg"))

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            mods {
                thismod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            mods {
                thismod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'sewingkit', '--all', '--output', file('src/main/generated_resources/'), '--existing', file('src/main/resources/')

            mods {
                thismod {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.0.15'

    compileOnly fg.deobf("mezz.jei:jei-1.16.3:7.6.0.49:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.3:7.6.0.49")
}

jar {
    from('/') {
        include 'LICENSE.txt'
    }

    manifest {
        attributes([
            "Specification-Title": "sewingkit",
            "Specification-Vendor": "gigaherz",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"gigaherz",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publish.dependsOn('reobfJar')
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.archivesBaseName
            from components.java

            //artifact sourceJar

            pom.withXml {
                asNode().dependencies.dependency.each { dep ->
                    if(dep.groupId.last().value().last() in ["net.minecraftforge","mezz.jei"]) {
                        assert dep.parent().remove(dep)
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url "$projectDir/../CommonMaven"
        }
    }
}
